import glob                        #selecting,importing files
import pandas as pd                #processing CSV,JSON files.
import xml.etree.ElementTree as ET #processing XML files.
from datetime import datetime

#==========================================================

#Files download and unzip
!wget https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0221EN-SkillsNetwork/labs/module%206/Lab%20-%20Extract%20Transform%20Load/data/source.zip
!unzip source.zip

#Set paths
tmpfile    = "temp.tmp"               # file used to store all extracted data
logfile    = "logfile.txt"            # all event logs will be stored in this file
targetfile = "transformed_data.csv"   # file where transformed data is stored

#==========================================================

#Extract function
##CSV
def CSVExt(file):
    dtFrame = pd.read_csv(file)
    return dtFrame

##JSON
def JSONExt(file):
    dtFrame = pd.read_json(file,lines=True)
    return dtFrame
    
##XML
def XMLExt(file):
    dtFrame = pd.DataFrame(columns=["name","height","weight"])
    tree = ET.parse(file)
    root = tree.getroot()
    for person in root:
    name = person.find("name").text
    height = float(person.find("height").text)
    weight = float(person.find("weight").text)
    dtFrame = dtFrame.append({"name":name, "height": height, "weight": weight},ignore_index=True)
    
    return dtFrame
    

#Extract loop function
def extLoop():
    dtFrame = pd.DataFrame(columns=["name","height","weight"])
    
    #CSV loop
    for x in glob.glob("*.csv"):
        dtFrame = dtFrame.append(CSVExt(x), ignore_index = True)
        
    #JSON loop
    for x in glob.glob("*.json"):
        dtFrame = dtFrame.append(JSONExt(x), ignore_index = True)
        
    #XML loop
    for x in glob.glob("*.json"):
        dtFrame = dtFrame.append(XMLExt(x), ignore_index = True)
        
   
    return dtFrame 
    
#==========================================================

#Transform : inche to mm, pound to kg
def convt(data)
    data['height'] = round(data.height*0.0254,2)
    data['weight'] = round(data.weight * 0.45359237,2)
    return data
    
 #==========================================================
 
 #Loading
 def load(targetfile,data_to_load):
    data_to_load.to_csv(targetfile) 
    
 #Logging
 def log(message):
    timestamp_format = '%Y-%h-%d-%H:%M:%S' # Year-Monthname-Day-Hour-Minute-Second
    now = datetime.now() # get current timestamp
    timestamp = now.strftime(timestamp_format)
    with open("logfile.txt","a") as f:
        f.write(timestamp + ',' + message + '\n')
        
 #==========================================================

#Running codes

log("Extracting started")
data = extLoop()
log("Extracting finished")

log("Transforming started")
dataTed = convt(data)
log("Transforming finished")

log("Loading in process")
load(targetfile, dataTed)
log("ETL process finished")
